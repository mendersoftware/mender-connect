stages:
  - test_prep
  - test
  - build
  - publish
  - trigger

variables:
  GOLANG_VERSION: "1.14"

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-static.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:unit:
  stage: test
  script:
    # start the dbus service
    - service dbus start
    # original from the gitlab-ci-check-golang-unittests.yml template
    - go list ./... | grep -v vendor | xargs -n1 -I {} -P 4 go test -v -covermode=atomic -coverprofile=../../../{}/coverage.txt {} || exit $?
    - mkdir -p tests/unit-coverage && find . -name 'coverage.txt' -exec cp --parents {} ./tests/unit-coverage \;
    - tar -cvf ${CI_PROJECT_DIR}/unit-coverage.tar tests/unit-coverage

build:make:
  stage: build
  needs: []
  image: golang:1.14-alpine3.11
  before_script:
    - apk add --update git make gcc pkgconfig libc-dev glib-dev
  script:
    - make build

trigger:mender-qa:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache git curl bash python3 py3-pip
    - pip3 install pyyaml
    - git clone https://github.com/mendersoftware/integration.git integration
    - git clone https://github.com/mendersoftware/mender-qa.git mender-qa
  script:
    - export WORKSPACE=$(pwd)
    - mender-qa/scripts/gitlab_trigger_client_publish ${CI_COMMIT_REF_NAME} ${CI_PROJECT_NAME}
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/

trigger:mender-dist-packages:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache curl
  script:
    - curl -v -f -X POST
      -F token=$MENDER_DIST_PACKAGES_TRIGGER_TOKEN
      -F ref=master
      -F variables[MENDER_CONNECT_VERSION]=$CI_COMMIT_REF_NAME
      https://gitlab.com/api/v4/projects/14968223/trigger/pipeline
  only:
    - tags
    - master

trigger:integration:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache curl
  script:
    - curl -v -f -X POST
      -F token=$CI_TRIGGER_TOKEN_INTEGRATION
      -F ref=master
      https://gitlab.com/api/v4/projects/12670314/trigger/pipeline
  only:
    - master
